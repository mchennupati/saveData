{"dependencies":[{"name":"babel-runtime/core-js/promise"},{"name":"babel-runtime/helpers/classCallCheck"},{"name":"babel-runtime/helpers/createClass"},{"name":"../api"},{"name":"./Builders/categoryBuilder"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _promise = require(\"babel-runtime/core-js/promise\");\n\nvar _promise2 = _interopRequireDefault(_promise);\n\nvar _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require(\"babel-runtime/helpers/createClass\");\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _api = require(\"../api\");\n\nvar _api2 = _interopRequireDefault(_api);\n\nvar _categoryBuilder = require(\"./Builders/categoryBuilder\");\n\nvar _categoryBuilder2 = _interopRequireDefault(_categoryBuilder);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Categories = function () {\n  function Categories(apiKey, returnType) {\n    (0, _classCallCheck3.default)(this, Categories);\n\n    this.apiKey = apiKey;\n    this.returnType = returnType;\n    this.categoryBuilder = new _categoryBuilder2.default();\n  }\n\n  /**\n   * Gets a category\n   * @param {Number} categoryId\n   * @returns {Promise} Resolves with the category or errors out\n   */\n\n\n  (0, _createClass3.default)(Categories, [{\n    key: \"getCategory\",\n    value: function getCategory(categoryId) {\n      var _this = this;\n\n      return new _promise2.default(function (resolve, reject) {\n        try {\n          var url = _this.categoryBuilder.setAPIKey(_this.apiKey).setCategoryId(categoryId).setFileType(_this.returnType).getUrl();\n\n          _api2.default.get('category?' + url).then(function (res) {\n            resolve(res.data);\n          }).catch(function (err) {\n            reject(err.response.data);\n          });\n        } catch (e) {\n          reject(e);\n        }\n      });\n    }\n\n    /**\n     * Gets the child categories for a specified parent category.\n     * @param {Number} categoryId\n     * @param {Object} params\n     * @returns {Promise} Resolves with the child category or errors out\n     */\n\n  }, {\n    key: \"getChildCategories\",\n    value: function getChildCategories(categoryId) {\n      var _this2 = this;\n\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      return new _promise2.default(function (resolve, reject) {\n        try {\n          var url = _this2.categoryBuilder.setAPIKey(_this2.apiKey).setCategoryId(categoryId).setFileType(_this2.returnType).setRealTimeStart(params).setRealTimeEnd(params).getUrl();\n\n          _api2.default.get('category/children?' + url).then(function (res) {\n            resolve(res.data);\n          }).catch(function (err) {\n            reject(err.response.data);\n          });\n        } catch (e) {\n          reject(e);\n        }\n      });\n    }\n\n    /**\n     * Gets the related categories for a category.\n     * @param {Number} categoryId\n     * @param {Object} params\n     * @returns {Promise} Resolves with the related categories or errors out\n     */\n\n  }, {\n    key: \"getRelatedCategories\",\n    value: function getRelatedCategories(categoryId) {\n      var _this3 = this;\n\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      return new _promise2.default(function (resolve, reject) {\n        try {\n          var url = _this3.categoryBuilder.setAPIKey(_this3.apiKey).setCategoryId(categoryId).setFileType(_this3.returnType).setRealTimeStart(params).setRealTimeEnd(params).getUrl();\n\n          _api2.default.get('category/related?' + url).then(function (res) {\n            resolve(res.data);\n          }).catch(function (err) {\n            reject(err.response.data);\n          });\n        } catch (e) {\n          reject(e);\n        }\n      });\n    }\n\n    /**\n     * Gets the series in a category.\n     * @param {Number} categoryId\n     * @param {Object} params\n     * @returns {Promise} Resolves with the series or errors out\n     */\n\n  }, {\n    key: \"getCategorySeries\",\n    value: function getCategorySeries(categoryId) {\n      var _this4 = this;\n\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      return new _promise2.default(function (resolve, reject) {\n        try {\n          var url = _this4.categoryBuilder.setAPIKey(_this4.apiKey).setCategoryId(categoryId).setFileType(_this4.returnType).setRealTimeStart(params).setRealTimeEnd(params).setLimit(params).setOffset(params).setOrderBy(params).setSortOrder(params).setFilterVariable(params).setFilterValue(params).setTagNames(params).setExcludeTagNames(params).getUrl();\n\n          _api2.default.get('category/series?' + url).then(function (res) {\n            resolve(res.data);\n          }).catch(function (err) {\n            reject(err.response.data);\n          });\n        } catch (e) {\n          reject(e);\n        }\n      });\n    }\n\n    /**\n     * Get the FRED tags for a category.\n     * @param {Number} categoryId\n     * @param {Object} params\n     * @returns {Promise} Resolves with the tags for the category or errors out\n     */\n\n  }, {\n    key: \"getCategoryTags\",\n    value: function getCategoryTags(categoryId) {\n      var _this5 = this;\n\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      return new _promise2.default(function (resolve, reject) {\n        try {\n          var url = _this5.categoryBuilder.setAPIKey(_this5.apiKey).setCategoryId(categoryId).setFileType(_this5.returnType).setRealTimeStart(params).setRealTimeEnd(params).setLimit(params).setOffset(params).setOrderBy(params).setSortOrder(params).setTagNames(params).setTagGroupId(params).setSearchText(params).getUrl();\n\n          _api2.default.get('category/tags?' + url).then(function (res) {\n            resolve(res.data);\n          }).catch(function (err) {\n            reject(err.response.data);\n          });\n        } catch (e) {\n          reject(e);\n        }\n      });\n    }\n\n    /**\n     * Get the related FRED tags for a category.\n     * @param {Number} categoryId\n     * @param {Object} params\n     * @returns {Promise} Resolves with the related tags for the category or errors out\n     */\n\n  }, {\n    key: \"getCategoryRelatedTags\",\n    value: function getCategoryRelatedTags(categoryId) {\n      var _this6 = this;\n\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      return new _promise2.default(function (resolve, reject) {\n        try {\n          var url = _this6.categoryBuilder.setAPIKey(_this6.apiKey).setCategoryId(categoryId).setFileType(_this6.returnType).setRealTimeStart(params).setRealTimeEnd(params).setLimit(params).setOffset(params).setOrderBy(params).setSortOrder(params).setTagNames(params).setTagGroupId(params).setSearchText(params).getUrl();\n\n          _api2.default.get('category/related_tags?' + url).then(function (res) {\n            resolve(res.data);\n          }).catch(function (err) {\n            reject(err.response.data);\n          });\n        } catch (e) {\n          reject(e);\n        }\n      });\n    }\n  }]);\n  return Categories;\n}();\n\nexports.default = Categories;"},"hash":"c6807594e25e60d30456705c06a5e365"}