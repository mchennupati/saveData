{"dependencies":[{"name":"babel-runtime/core-js/promise"},{"name":"babel-runtime/helpers/classCallCheck"},{"name":"babel-runtime/helpers/createClass"},{"name":"../api"},{"name":"./Builders/sourcesBuilder"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _promise = require(\"babel-runtime/core-js/promise\");\n\nvar _promise2 = _interopRequireDefault(_promise);\n\nvar _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require(\"babel-runtime/helpers/createClass\");\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _api = require(\"../api\");\n\nvar _api2 = _interopRequireDefault(_api);\n\nvar _sourcesBuilder = require(\"./Builders/sourcesBuilder\");\n\nvar _sourcesBuilder2 = _interopRequireDefault(_sourcesBuilder);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Sources = function () {\n  function Sources(apiKey, returnType) {\n    (0, _classCallCheck3.default)(this, Sources);\n\n    this.apiKey = apiKey;\n    this.returnType = returnType;\n    this.sourcesBuilder = new _sourcesBuilder2.default();\n  }\n\n  /**\n   * Gets all sources of economic data.\n   * @param {Object} params\n   * @returns {Promise} Resolves with all sources of economic data or errors out\n   */\n\n\n  (0, _createClass3.default)(Sources, [{\n    key: \"getAllSources\",\n    value: function getAllSources(params) {\n      var _this = this;\n\n      return new _promise2.default(function (resolve, reject) {\n        try {\n          var url = _this.sourcesBuilder.setAPIKey(_this.apiKey).setFileType(_this.returnType).setRealTimeStart(params).setRealTimeEnd(params).setLimit(params).setOffset(params).setOrderBy(params).setSortOrder(params).getUrl();\n\n          _api2.default.get('sources?' + url).then(function (res) {\n            resolve(res.data);\n          }).catch(function (err) {\n            reject(err.response.data);\n          });\n        } catch (e) {\n          reject(e);\n        }\n      });\n    }\n\n    /**\n     * Gets a source of economic data.\n     * @param {Number} sourceId\n     * @param {Object} params\n     * @returns {Promise} Resolves with a source of economic data or errors out\n     */\n\n  }, {\n    key: \"getSource\",\n    value: function getSource(sourceId) {\n      var _this2 = this;\n\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      return new _promise2.default(function (resolve, reject) {\n        try {\n          var url = _this2.sourcesBuilder.setAPIKey(_this2.apiKey).setFileType(_this2.returnType).setSourceId(sourceId).setRealTimeStart(params).setRealTimeEnd(params).getUrl();\n\n          _api2.default.get('source?' + url).then(function (res) {\n            resolve(res.data);\n          }).catch(function (err) {\n            reject(err.response.data);\n          });\n        } catch (e) {\n          reject(e);\n        }\n      });\n    }\n\n    /**\n     * Gets the releases for a source.\n     * @param {Number} sourceId\n     * @param {Object} params\n     * @returns {Promise} Resolves with the releases for a source or errors out\n     */\n\n  }, {\n    key: \"getReleasesForSource\",\n    value: function getReleasesForSource(sourceId) {\n      var _this3 = this;\n\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      return new _promise2.default(function (resolve, reject) {\n        try {\n          var url = _this3.sourcesBuilder.setAPIKey(_this3.apiKey).setFileType(_this3.returnType).setSourceId(sourceId).setRealTimeStart(params).setRealTimeEnd(params).setLimit(params).setOffset(params).setOrderBy(params).setSortOrder(params).getUrl();\n\n          _api2.default.get('source/releases?' + url).then(function (res) {\n            resolve(res.data);\n          }).catch(function (err) {\n            reject(err.response.data);\n          });\n        } catch (e) {\n          reject(e);\n        }\n      });\n    }\n  }]);\n  return Sources;\n}();\n\nexports.default = Sources;"},"hash":"fdd3deffa04cdd8e2a5aab5307952d0c"}